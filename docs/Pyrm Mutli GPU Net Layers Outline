Pyrm Mutli GPU Net Layers Outline


x = PyrmNet(**kwags)(inputs)
	"""
	inputs:
	inputs -> (4-D Tensor) with shape (None, 3, H, W) representing RGB images

	parameters:
	n_gpu -> (non-negative integer) number of gpus available on machine
				can limit number of layers for GPU calcs
	gpu_only -> (boolean) whether layers should operate on CPU's if there
				is a need for GPUS
	center -> (boolean) whether the ArrayWeave includes center
	min_size -> (non-negative integer) the minimum dimension that ArrayWeave
				can operate on.
	n_layers -> (non-negative integer) the numbers of layers in a pyrm-net:
				n_layers = min(n_layers,
				 			fn(gpu_only,n_gpu) #Can we use gpus? if so how big?
				 			fn(max_pool_loc,min_size)) #how small can we make the image?
	n_filters -> (non-negative integer) the number of filters on the first layer
	r_filters -> (non-negative integer) the ratio at which the number of filters
				changes as layers are advanced
	max_pool_loc -> (non-negative integer) the number of layers passed since
				the first layer for the next MaxPool operation
	end_max_pool -> (boolean) whether a max_pool operation should be applied
				before the final tensor is returned.
	"""


PyrmLayer(**kwargs)(inputs)
	"""
	inputs:
	inputs -> (List of) (4-D Tesnors) with shape (None, F, HH, WW)	

	parameters:
	gpu_only -> (boolean) whether layers should operate on CPU's if there
				is a need for GPUS
	ava_gpu -> (List of) string names for GPUs available to Layer
	center -> (boolean) whether the ArrayWeave includes center
	n_filters -> (non-negative integer) the number of filters for layer


PyrmUnit(**kwargs)(inputs)
	"""
	inputs -> (List of) 4-D Tensors with shape (None, F, HH, WW)
	"""

	parameters:
	disjoint -> (boolean) wheter inputs is a list of multiple 
				tensors to combine or one to duplicate!
	combine -> (boolean) whether inputs should have convolution
				on them before 
	device -> (List of) string names for GPUs available to unit
	center -> (boolean) whether the ArrayWeave includes center
	n_filters -> (non-negative integer) the number of filters for layer
	r_combine -> (non-negative integer) the raito of filters from
				Weave Conv Layers to the Combination Layers
	pre_pad -> (boolean) whether inputs should be padded before 
				convolution
	static filter_size -> (3,3)






